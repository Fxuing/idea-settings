<application>
  <component name="AppStorage">
    <histories>
      <item value="appid missing hint" />
      <item value="Unsatisfied dependency expressed through field 'jpushService';" />
      <item value="Caught exception 'e' is immediately rethrown more... (Ctrl+F1)" />
      <item value="is Debug Enabled" />
      <item value="/** * Returns an {@code Optional} with the specified present non-null value. * * @param &lt;T&gt; the class of the value * @param value the value to be present, which must be non-null * @return an {@code Optional} with the value present * @throws NullPointerException if value is null */" />
      <item value="&quot;get wechat concern user fail&quot;" />
      <item value="关注" />
      <item value="关注用户" />
      <item value="concern Id" />
      <item value="branches" />
      <item value="Hash objects have these methods:  - update(data): Update the hash object with the bytes in data. Repeated calls                  are equivalent to a single call with the concatenation of all                  the arguments.  - digest():     Return the digest of the bytes passed to the update() method                  so far as a bytes object.  - hexdigest():  Like digest() except the digest is returned as a string                  of double length, containing only hexadecimal digits.  - copy():       Return a copy (clone) of the hash object. This can be used to                  efficiently compute the digests of datas that share a common                  initial substring.  For example, to obtain the digest of the byte string 'Nobody inspects the spammish repetition': " />
      <item value="Performs a final update on the digest using the specified array * of bytes, then completes the digest computation. That is, this * method first calls {@link #update(byte[]) update(input)}, * passing the &lt;i&gt;input&lt;/i&gt; array to the {@code update} method, * then calls {@link #digest() digest()}." />
      <item value="encode" />
      <item value="report" />
      <item value="header" />
      <item value="get Instance" />
      <item value="get Insanect" />
      <item value="设计模式" />
      <item value="设计" />
      <item value="To navigate any rest service in the editor quickly, press (Navigate | Rest Service) and start typing the url of the service. Choose the item from a drop-down list that appears." />
      <item value="Inspection info:Under construction" />
      <item value="Unsatisfied dependency expressed through field" />
      <item value="Unsatisfied dependency expressed through field 'authInfoMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.obanks.info.entinfo.mapper.AuthInfoMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}" />
      <item value="Correct the classpath of your application so that it contains a single, compatible version of com.google.gson.GsonBuilder" />
      <item value="but it does not exist. Its class, com.google.gson.GsonBuilder, is available from the following locations:" />
      <item value="tax report" />
      <item value="税务报告" />
      <item value="TaxReport" />
      <item value="Segmented Regions" />
      <item value="========================&#10;BUILD OUTPUT DESCRIPTION&#10;======================== When you build an Java application project that has a main class, the IDE&#10;automatically copies all of the JAR&#10;files on the projects classpath to your projects dist/lib folder. The IDE&#10;also adds each of the JAR files to the Class-Path element in the application&#10;JAR files manifest file (MANIFEST.MF). To run the project from the command line, go to the dist folder and&#10;type the following: java -jar &quot;tess4j-3.4.8.jar&quot; To distribute this project, zip up the dist folder (including the lib folder)&#10;and distribute the ZIP file. Notes: * If two JAR files on the project classpath have the same name, only the first&#10;JAR file is copied to the lib folder.&#10;* Only JAR files are copied to the lib folder.&#10;If the classpath contains other types of files or folders, these files (folders)&#10;are not copied.&#10;* If a library on the projects classpath also has a Class-Path element&#10;specified in the manifest,the content of the Class-Path element has to be on&#10;the projects runtime path.&#10;* To set a main class in a standard Java project, right-click the project node&#10;in the Projects window and choose Properties. Then click Run and enter the&#10;class name in the Main Class field. Alternatively, you can manually type the&#10;class name in the manifest Main-Class element." />
      <item value="parameter not found: enable_new_segsearch" />
      <item value="探索" />
      <item value="App Run" />
      <item value="Subquery returns more than 1 row" />
      <item value="copy Screen Shot" />
      <item value="screen Shot" />
      <item value="slide" />
      <item value="执行" />
      <item value="截屏" />
      <item value="init Connect" />
      <item value="enter Soul" />
      <item value="enter Explore" />
      <item value="Install on IntelliJ and Android Studio to get advanced Java code completions&#10;Codota completes lines of code based on millions of open source Java programs and your context helping you code faster with fewer errors. The following features are available with the new version of Codota:&#10;Full line AI autocomplete&#10;In line and relevant code examples&#10;Code suggestions based on your own coding practices&#10;Your code stays private. Codota doesn't send your code to the Codota server, we only send minimal contextual information from the currently edited file that allows us to make predictions based on your current local scope. Learn more. Installation is quick and simple, just follow the instructions here Go to our website to find popular Java code like Java date format snippets and Java timer examples Click here for more information. Terms &amp; Conditions Contact support@codota.com for any question or issue. Codota Java supports IntelliJ IDEA version 2017.1 or higher Codota Kotlin supports IntelliJ IDEA or Android Studio version 2018.3 or higher Codota JavaScript supports IntelliJ IDEA or WebStorm version 2018.3 or higher" />
      <item value="was successfully authenticated" />
      <item value="screen" />
      <item value="Assertion" />
      <item value="emulator-5554" />
      <item value="Cannot resolve file 'E:\\opencv\\opencv\\opencv\\build\\java\\opencv-410.jar' less... (Ctrl+F1)" />
      <item value="show Event" />
      <item value="soul Model To Int" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="618" />
        <entry key="ENGLISH" value="642" />
        <entry key="ARABIC" value="1" />
        <entry key="IRISH" value="1" />
        <entry key="BOSNIAN" value="2" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="2" />
        <entry key="FRENCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="MALTESE" value="1" />
        <entry key="MALAY" value="1" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="SCOTS_GAELIC" value="1" />
        <entry key="SOMALI" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="HINDI" value="4" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="0ebebcc90864b8bc" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>